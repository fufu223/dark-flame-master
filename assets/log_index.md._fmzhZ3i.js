import{_ as e,c as t,o as a,a2 as i}from"./chunks/framework.DfOI_9ju.js";const u=JSON.parse('{"title":"漆黑烈焰使的记事本","description":"","frontmatter":{},"headers":[],"relativePath":"log/index.md","filePath":"log/index.md"}'),s={name:"log/index.md"},r=i('<h1 id="漆黑烈焰使的记事本" tabindex="-1">漆黑烈焰使的记事本 <a class="header-anchor" href="#漆黑烈焰使的记事本" aria-label="Permalink to &quot;漆黑烈焰使的记事本&quot;">​</a></h1><h2 id="将vite-press文档部署到github-pages" tabindex="-1">将vite-press文档部署到Github Pages <a class="header-anchor" href="#将vite-press文档部署到github-pages" aria-label="Permalink to &quot;将vite-press文档部署到Github Pages&quot;">​</a></h2><p>具体操作步骤如下可以参考<a href="https://vitepress.dev/zh/guide/deploy#github-pages" target="_blank" rel="noreferrer">vite-press部署到Github Pages</a> 没有成功的话，可以尝试以下方法：</p><ol><li>在github创建一个仓库，创建时如果设置子路径那么vite-press文档的base需要设置为<code>/子路径/</code>。请参考<a href="https://vitepress.dev/zh/guide/deploy#setting-a-public-base-path" target="_blank" rel="noreferrer">详情</a></li><li>本地拉取项目</li><li>在根目录下创建一个名为docs的文件夹，并将vite-press打包生成的dist目录中的所有文件复制到该文件夹中。</li><li>推送到github</li><li>开启github仓库的Github Pages功能 这样以后每次推送就会自动部署了。</li></ol><h2 id="向github推送项目一直403错误" tabindex="-1">向Github推送项目一直403错误 <a class="header-anchor" href="#向github推送项目一直403错误" aria-label="Permalink to &quot;向Github推送项目一直403错误&quot;">​</a></h2><p>因为Github是国外的服务器，国内使用比较慢，所以需要设置代理。没有科学上网经验的小伙伴可以试试<a href="https://008.ovofast.com" target="_blank" rel="noreferrer">ovo机场</a>。实惠好用。使用ovo机场的代理工具可以设置代理端口，我们可以将这个端口设置到Git的代理配置中，以此来提升Git与Github的访问速度。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https.proxy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://127.0.0.1:your_proxy_port</span></span></code></pre></div>',7),h=[r];function o(l,p,n,d,c,g){return a(),t("div",null,h)}const _=e(s,[["render",o]]);export{u as __pageData,_ as default};
